{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"PackagesView\",\n  data() {\n    return {\n      packages: [],\n      // Lista pachetelor\n      couriers: [],\n      // Lista curierilor disponibili\n      assignDialog: false,\n      // Flag pentru deschiderea dialogului\n      selectedPackage: null,\n      // Coletul selectat pentru asignare\n      selectedCourierId: null,\n      // ID-ul curierului selectat\n      headers: [{\n        text: \"Package ID\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      }, {\n        text: \"Courier Details\",\n        value: \"courier\"\n      }, {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\"\n      } // Adaugăm coloana pentru acțiuni\n      ]\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/package\");\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"\",\n            name: \"\",\n            email: \"\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    async fetchCouriers() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/couriers/no-pending-packages\");\n        this.couriers = response.data;\n      } catch (error) {\n        console.error(\"Error fetching couriers:\", error);\n      }\n    },\n    openAssignDialog(packageItem) {\n      this.selectedPackage = packageItem; // Setăm coletul selectat\n      this.assignDialog = true; // Deschidem dialogul\n      this.fetchCouriers(); // Preluăm curierii disponibili\n    },\n    async assignPackage() {\n      try {\n        await axios.put(`http://localhost:8083/package/packages/${this.selectedPackage.id}/ assign`, {\n          courier_id: this.selectedCourierId\n        });\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\n        this.assignDialog = false; // Închidem dialogul\n        this.fetchPackages(); // Reînnoim lista\n      } catch (error) {\n        console.error(\"Error assigning package:\", error);\n        alert(\"Failed to assign package. Please try again.\");\n      }\n    },\n    async deliverPackage(packageItem) {\n      try {\n        await axios.post(\"http://localhost:8083/package/deliver\", {\n          packageId: packageItem.id\n        });\n        alert(`Package ${packageItem.id} delivered successfully`);\n        this.fetchPackages(); // Reînnoiește lista de pachete\n      } catch (error) {\n        console.error(\"Error delivering package:\", error);\n        alert(\"Failed to deliver the package.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchPackages(); // Preluăm pachetele la montarea componentei\n  }\n};","map":{"version":3,"names":["axios","name","data","packages","couriers","assignDialog","selectedPackage","selectedCourierId","headers","text","value","methods","fetchPackages","response","get","map","pkg","courier","id","email","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","fetchCouriers","openAssignDialog","packageItem","assignPackage","put","courier_id","alert","deliverPackage","post","packageId","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Packages</h1>\r\n    <v-btn color=\"primary\" @click=\"fetchPackages\">REFRESH</v-btn>\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"packages\"\r\n        class=\"mt-3\"\r\n        item-value=\"id\"\r\n        dense\r\n    >\r\n      <template v-slot:item.formattedDate=\"{ item }\">\r\n        {{ item.formattedDate }}\r\n      </template>\r\n      <template v-slot:item.courier=\"{ item }\">\r\n        <div>\r\n          <strong>ID:</strong> {{ item.courier.id || \"\" }}<br />\r\n          <strong>Name:</strong> {{ item.courier.name || \"\" }}<br />\r\n          <strong>Email:</strong> {{ item.courier.email || \"\" }}\r\n        </div>\r\n      </template>\r\n      <template v-slot:item.deliveryAddress=\"{ item }\">\r\n        {{ item.deliveryAddress || \"\" }}\r\n      </template>\r\n      <template v-slot:item.actions=\"{ item }\">\r\n        <!-- Buton Deliver -->\r\n        <v-btn\r\n            color=\"success\"\r\n            small\r\n            @click=\"deliverPackage(item)\"\r\n            :disabled=\"item.status === 'DELIVERED'\"\r\n        >\r\n          Deliver\r\n        </v-btn>\r\n        <!-- Buton Assign -->\r\n        <v-btn\r\n            color=\"primary\"\r\n            small\r\n            @click=\"openAssignDialog(item)\"\r\n            :disabled=\"item.status !== 'NEW'\"\r\n        >\r\n          Assign\r\n        </v-btn>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <!-- Dialog pentru asignarea pachetului -->\r\n    <v-dialog v-model=\"assignDialog\" max-width=\"500px\">\r\n      <v-card>\r\n        <v-card-title>Assign Package</v-card-title>\r\n        <v-card-text>\r\n          <v-form @submit.prevent=\"assignPackage\">\r\n            <v-select\r\n                v-model=\"selectedCourierId\"\r\n                :items=\"couriers\"\r\n                item-text=\"name\"\r\n                item-value=\"id\"\r\n                label=\"Select Courier\"\r\n                required\r\n            ></v-select>\r\n            <v-btn color=\"primary\" type=\"submit\">Assign</v-btn>\r\n          </v-form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PackagesView\",\r\n  data() {\r\n    return {\r\n      packages: [], // Lista pachetelor\r\n      couriers: [], // Lista curierilor disponibili\r\n      assignDialog: false, // Flag pentru deschiderea dialogului\r\n      selectedPackage: null, // Coletul selectat pentru asignare\r\n      selectedCourierId: null, // ID-ul curierului selectat\r\n      headers: [\r\n        { text: \"Package ID\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" },\r\n        { text: \"Courier Details\", value: \"courier\" },\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Actions\", value: \"actions\" }, // Adaugăm coloana pentru acțiuni\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/package\");\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"\", name: \"\", email: \"\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    async fetchCouriers() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/couriers/no-pending-packages\");\r\n        this.couriers = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching couriers:\", error);\r\n      }\r\n    },\r\n    openAssignDialog(packageItem) {\r\n      this.selectedPackage = packageItem; // Setăm coletul selectat\r\n      this.assignDialog = true; // Deschidem dialogul\r\n      this.fetchCouriers(); // Preluăm curierii disponibili\r\n    },\r\n    async assignPackage() {\r\n      try {\r\n        await axios.put(`http://localhost:8083/package/packages/${this.selectedPackage.id}/ assign`, {\r\n          courier_id: this.selectedCourierId,\r\n        });\r\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\r\n        this.assignDialog = false; // Închidem dialogul\r\n        this.fetchPackages(); // Reînnoim lista\r\n      } catch (error) {\r\n        console.error(\"Error assigning package:\", error);\r\n        alert(\"Failed to assign package. Please try again.\");\r\n      }\r\n    },\r\n    async deliverPackage(packageItem) {\r\n      try {\r\n        await axios.post(\"http://localhost:8083/package/deliver\", {\r\n          packageId: packageItem.id,\r\n        });\r\n        alert(`Package ${packageItem.id} delivered successfully`);\r\n        this.fetchPackages(); // Reînnoiește lista de pachete\r\n      } catch (error) {\r\n        console.error(\"Error delivering package:\", error);\r\n        alert(\"Failed to deliver the package.\");\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPackages(); // Preluăm pachetele la montarea componentei\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}