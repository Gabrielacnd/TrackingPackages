{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8083\"; // URL-ul backend-ului\n\nexport default {\n  name: \"PackagesView\",\n  data() {\n    return {\n      packages: [],\n      // Lista pachetelor\n      couriers: [],\n      // Lista curierilor disponibili\n      assignDialog: false,\n      // Flag pentru deschiderea dialogului\n      selectedPackage: null,\n      // Coletul selectat pentru asignare\n      selectedCourierId: null,\n      // ID-ul curierului selectat\n      loadingCouriers: false,\n      // Indicator de încărcare curieri\n      headers: [{\n        text: \"Package ID\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      }, {\n        text: \"Courier Details\",\n        value: \"courier\"\n      }, {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\"\n      }]\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/package`);\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"\",\n            name: \"\",\n            email: \"\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    async fetchCouriers() {\n      try {\n        this.loadingCouriers = true;\n        const response = await axios.get(`${API_BASE_URL}/couriers/no-pending-packages`);\n        this.couriers = response.data || []; // Dacă nu se întorc date, setează lista ca goală\n        console.log(\"Couriers:\", this.couriers); // Pentru debugging\n      } catch (error) {\n        console.error(\"Error fetching couriers:\", error);\n      } finally {\n        this.loadingCouriers = false;\n      }\n    },\n    openAssignDialog(packageItem) {\n      this.selectedPackage = packageItem;\n      this.selectedCourierId = null; // Resetăm selecția\n      this.assignDialog = true;\n      this.fetchCouriers();\n    },\n    async assignPackage() {\n      try {\n        if (!this.selectedCourierId) {\n          alert(\"Please select a courier.\");\n          return;\n        }\n        await axios.put(`${API_BASE_URL}/package/packages/${this.selectedPackage.id}/assign`, {\n          courier_id: this.selectedCourierId\n        });\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\n        this.assignDialog = false;\n        this.fetchPackages();\n      } catch (error) {\n        console.error(\"Error assigning package:\", error);\n        alert(\"Failed to assign package. Please try again.\");\n      }\n    },\n    async deliverPackage(packageItem) {\n      try {\n        await axios.post(`${API_BASE_URL}/package/deliver`, {\n          packageId: packageItem.id\n        });\n        alert(`Package ${packageItem.id} delivered successfully`);\n        this.fetchPackages();\n      } catch (error) {\n        console.error(\"Error delivering package:\", error);\n        alert(\"Failed to deliver the package.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","name","data","packages","couriers","assignDialog","selectedPackage","selectedCourierId","loadingCouriers","headers","text","value","methods","fetchPackages","response","get","map","pkg","courier","id","email","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","fetchCouriers","log","openAssignDialog","packageItem","assignPackage","alert","put","courier_id","deliverPackage","post","packageId","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:8083\"; // URL-ul backend-ului\r\n\r\nexport default {\r\n  name: \"PackagesView\",\r\n  data() {\r\n    return {\r\n      packages: [], // Lista pachetelor\r\n      couriers: [], // Lista curierilor disponibili\r\n      assignDialog: false, // Flag pentru deschiderea dialogului\r\n      selectedPackage: null, // Coletul selectat pentru asignare\r\n      selectedCourierId: null, // ID-ul curierului selectat\r\n      loadingCouriers: false, // Indicator de încărcare curieri\r\n      headers: [\r\n        { text: \"Package ID\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" },\r\n        { text: \"Courier Details\", value: \"courier\" },\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Actions\", value: \"actions\" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/package`);\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"\", name: \"\", email: \"\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    async fetchCouriers() {\r\n      try {\r\n        this.loadingCouriers = true;\r\n        const response = await axios.get(`${API_BASE_URL}/couriers/no-pending-packages`);\r\n        this.couriers = response.data || []; // Dacă nu se întorc date, setează lista ca goală\r\n        console.log(\"Couriers:\", this.couriers); // Pentru debugging\r\n      } catch (error) {\r\n        console.error(\"Error fetching couriers:\", error);\r\n      } finally {\r\n        this.loadingCouriers = false;\r\n      }\r\n    },\r\n    openAssignDialog(packageItem) {\r\n      this.selectedPackage = packageItem;\r\n      this.selectedCourierId = null; // Resetăm selecția\r\n      this.assignDialog = true;\r\n      this.fetchCouriers();\r\n    },\r\n    async assignPackage() {\r\n      try {\r\n        if (!this.selectedCourierId) {\r\n          alert(\"Please select a courier.\");\r\n          return;\r\n        }\r\n        await axios.put(\r\n            `${API_BASE_URL}/package/packages/${this.selectedPackage.id}/assign`,\r\n            { courier_id: this.selectedCourierId }\r\n        );\r\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\r\n        this.assignDialog = false;\r\n        this.fetchPackages();\r\n      } catch (error) {\r\n        console.error(\"Error assigning package:\", error);\r\n        alert(\"Failed to assign package. Please try again.\");\r\n      }\r\n    },\r\n    async deliverPackage(packageItem) {\r\n      try {\r\n        await axios.post(`${API_BASE_URL}/package/deliver`, {\r\n          packageId: packageItem.id,\r\n        });\r\n        alert(`Package ${packageItem.id} delivered successfully`);\r\n        this.fetchPackages();\r\n      } catch (error) {\r\n        console.error(\"Error delivering package:\", error);\r\n        alert(\"Failed to deliver the package.\");\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPackages();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}