{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AssignPackage\",\n  data() {\n    return {\n      packages: [],\n      couriers: [],\n      assignDialog: false,\n      selectedPackage: null,\n      selectedCourierId: null,\n      loadingCouriers: false,\n      loadingAssign: false,\n      headers: [{\n        text: \"Package ID\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      }, {\n        text: \"Courier Details\",\n        value: \"courier\"\n      }, {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\"\n      }]\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/package\");\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"\",\n            name: \"\",\n            email: \"\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    async fetchCouriers() {\n      this.loadingCouriers = true;\n      try {\n        const response = await axios.get(\"http://localhost:8083/couriers/no-pending-packages\");\n\n        // Asigură-te că datele sunt corecte\n        this.couriers = response.data.map(courier => ({\n          id: courier.id,\n          name: courier.name || 'N/A',\n          // Asigură-te că numele este setat corect\n          email: courier.email || 'N/A'\n        })) || [];\n      } catch (error) {\n        console.error(\"Error fetching couriers:\", error);\n      } finally {\n        this.loadingCouriers = false;\n      }\n    },\n    openAssignDialog(packageItem) {\n      this.selectedPackage = packageItem;\n      this.selectedCourierId = null; // Resetăm selecția\n      this.assignDialog = true;\n      this.fetchCouriers(); // Încărcăm curierii disponibili\n    },\n    async assignPackage() {\n      this.loadingAssign = true;\n      try {\n        await axios.put(`http://localhost:8083/packages/${this.selectedPackage.id}/assign`, {\n          courier_id: this.selectedCourierId\n        });\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\n        this.assignDialog = false;\n        this.fetchPackages(); // Actualizăm lista de pachete\n      } catch (error) {\n        console.error(\"Error assigning package:\", error);\n        alert(\"Failed to assign package. Please try again.\");\n      } finally {\n        this.loadingAssign = false;\n      }\n    },\n    async deliverPackage(packageItem) {\n      try {\n        await axios.post(\"http://localhost:8083/package/deliver\", {\n          packageId: packageItem.id\n        });\n        alert(`Package ${packageItem.id} delivered successfully`);\n        this.fetchPackages(); // Actualizăm lista de pachete\n      } catch (error) {\n        console.error(\"Error delivering package:\", error);\n        alert(\"Failed to deliver the package.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","name","data","packages","couriers","assignDialog","selectedPackage","selectedCourierId","loadingCouriers","loadingAssign","headers","text","value","methods","fetchPackages","response","get","map","pkg","courier","id","email","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","fetchCouriers","openAssignDialog","packageItem","assignPackage","put","courier_id","alert","deliverPackage","post","packageId","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Packages</h1>\r\n    <v-btn color=\"primary\" @click=\"fetchPackages\">REFRESH</v-btn>\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"packages\"\r\n        class=\"mt-3\"\r\n        item-value=\"id\"\r\n        dense\r\n    >\r\n      <template v-slot:item.formattedDate=\"{ item }\">\r\n        {{ item.formattedDate }}\r\n      </template>\r\n\r\n      <template v-slot:item.courier=\"{ item }\">\r\n        <div>\r\n          <strong>ID:</strong> {{ item.courier.id || \"N/A\" }}<br />\r\n          <strong>Name:</strong> {{ item.courier.name || \"N/A\" }}<br />\r\n          <strong>Email:</strong> {{ item.courier.email || \"N/A\" }}\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:item.deliveryAddress=\"{ item }\">\r\n        {{ item.deliveryAddress || \"N/A\" }}\r\n      </template>\r\n\r\n      <template v-slot:item.actions=\"{ item }\">\r\n        <v-btn\r\n            color=\"success\"\r\n            small\r\n            @click=\"deliverPackage(item)\"\r\n            :disabled=\"item.status === 'DELIVERED'\"\r\n        >\r\n          Deliver\r\n        </v-btn>\r\n        <v-btn\r\n            color=\"primary\"\r\n            small\r\n            @click=\"openAssignDialog(item)\"\r\n            :disabled=\"item.status !== 'NEW'\"\r\n        >\r\n          Assign\r\n        </v-btn>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <!-- Dialog pentru asignare -->\r\n    <v-dialog v-model=\"assignDialog\" max-width=\"500px\">\r\n      <v-card>\r\n        <v-card-title>Assign Package</v-card-title>\r\n        <v-card-text>\r\n          <v-form @submit.prevent=\"assignPackage\">\r\n            <v-select\r\n                v-model=\"selectedCourierId\"\r\n                :items=\"couriers\"\r\n                item-text=\"name\"\r\n            item-value=\"id\"\r\n            label=\"Select Courier\"\r\n            :disabled=\"loadingCouriers\"\r\n            required\r\n            >\r\n            <template #append>\r\n                <span v-if=\"couriers.length === 0 && !loadingCouriers\">\r\n                  No couriers available\r\n                </span>\r\n              <span v-if=\"loadingCouriers\">Loading couriers...</span>\r\n            </template>\r\n            </v-select>\r\n            <v-btn\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                :disabled=\"!selectedCourierId || loadingAssign\"\r\n            >\r\n              Assign\r\n            </v-btn>\r\n          </v-form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AssignPackage\",\r\n  data() {\r\n    return {\r\n      packages: [],\r\n      couriers: [],\r\n      assignDialog: false,\r\n      selectedPackage: null,\r\n      selectedCourierId: null,\r\n      loadingCouriers: false,\r\n      loadingAssign: false,\r\n      headers: [\r\n        { text: \"Package ID\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" },\r\n        { text: \"Courier Details\", value: \"courier\" },\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Actions\", value: \"actions\" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/package\");\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"\", name: \"\", email: \"\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    async fetchCouriers() {\r\n      this.loadingCouriers = true;\r\n      try {\r\n        const response = await axios.get(\r\n            \"http://localhost:8083/couriers/no-pending-packages\"\r\n        );\r\n\r\n        // Asigură-te că datele sunt corecte\r\n        this.couriers = response.data.map(courier => ({\r\n          id: courier.id,\r\n          name: courier.name || 'N/A', // Asigură-te că numele este setat corect\r\n          email: courier.email || 'N/A'\r\n        })) || [];\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching couriers:\", error);\r\n      } finally {\r\n        this.loadingCouriers = false;\r\n      }\r\n    },\r\n    openAssignDialog(packageItem) {\r\n      this.selectedPackage = packageItem;\r\n      this.selectedCourierId = null; // Resetăm selecția\r\n      this.assignDialog = true;\r\n      this.fetchCouriers(); // Încărcăm curierii disponibili\r\n    },\r\n    async assignPackage() {\r\n      this.loadingAssign = true;\r\n      try {\r\n        await axios.put(\r\n            `http://localhost:8083/packages/${this.selectedPackage.id}/assign`,\r\n            { courier_id: this.selectedCourierId }\r\n        );\r\n\r\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\r\n\r\n        this.assignDialog = false;\r\n\r\n        this.fetchPackages(); // Actualizăm lista de pachete\r\n\r\n      } catch (error) {\r\n\r\n        console.error(\"Error assigning package:\", error);\r\n\r\n        alert(\"Failed to assign package. Please try again.\");\r\n\r\n      } finally {\r\n        this.loadingAssign = false;\r\n      }\r\n    },\r\n    async deliverPackage(packageItem) {\r\n      try {\r\n        await axios.post(\"http://localhost:8083/package/deliver\", {\r\n          packageId: packageItem.id,\r\n        });\r\n\r\n        alert(`Package ${packageItem.id} delivered successfully`);\r\n\r\n        this.fetchPackages(); // Actualizăm lista de pachete\r\n\r\n      } catch (error) {\r\n\r\n        console.error(\"Error delivering package:\", error);\r\n\r\n        alert(\"Failed to deliver the package.\");\r\n\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPackages();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Stiluri personalizate pentru componentă */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}