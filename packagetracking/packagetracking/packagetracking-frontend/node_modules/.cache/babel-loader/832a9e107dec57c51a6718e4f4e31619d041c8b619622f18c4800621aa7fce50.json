{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"PackagesView\",\n  components: {\n    AddPackage\n  },\n  data() {\n    return {\n      packages: [],\n      // Lista pachetelor\n      headers: [{\n        text: \"Id\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      },\n      // Data în format prietenos\n      {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      },\n      // Adresă\n      {\n        text: \"Status\",\n        value: \"status\"\n      },\n      // Status\n      {\n        text: \"Courier ID\",\n        value: \"courier.id\"\n      } // ID curier\n      ],\n      showDialog: false,\n      currentUser: \"Nume utilizator\" // Exemplu\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/package\");\n\n        // Transformăm data primită pentru a formata data și ora\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"N/A\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          }) // Formatează data și ora\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    onPackageCreated(newPackage) {\n      this.packages.push({\n        ...newPackage,\n        formattedDate: new Date(newPackage.createdOn).toLocaleString(\"ro-RO\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        })\n      });\n      this.showDialog = false;\n    }\n  },\n  mounted() {\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","name","components","AddPackage","data","packages","headers","text","value","showDialog","currentUser","methods","fetchPackages","response","get","map","pkg","courier","id","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","onPackageCreated","newPackage","push","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PackagesView\",\r\n  components: {\r\n    AddPackage,\r\n  },\r\n  data() {\r\n    return {\r\n      packages: [], // Lista pachetelor\r\n      headers: [\r\n        { text: \"Id\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" }, // Data în format prietenos\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" }, // Adresă\r\n        { text: \"Status\", value: \"status\" }, // Status\r\n        { text: \"Courier ID\", value: \"courier.id\" }, // ID curier\r\n      ],\r\n      showDialog: false,\r\n      currentUser: \"Nume utilizator\", // Exemplu\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/package\");\r\n\r\n        // Transformăm data primită pentru a formata data și ora\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"N/A\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }), // Formatează data și ora\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    onPackageCreated(newPackage) {\r\n      this.packages.push({\r\n        ...newPackage,\r\n        formattedDate: new Date(newPackage.createdOn).toLocaleString(\"ro-RO\", {\r\n          year: \"numeric\",\r\n          month: \"2-digit\",\r\n          day: \"2-digit\",\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        }),\r\n      });\r\n\r\n      this.showDialog = false;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPackages();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,EAC3B;QAAED,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAgB,CAAC;MAAE;MAChD;QAAED,IAAI,EAAE,kBAAkB;QAAEC,KAAK,EAAE;MAAkB,CAAC;MAAE;MACxD;QAAED,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC;MAAE;MACrC;QAAED,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAa,CAAC,CAAE;MAAA,CAC9C;MACDC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,iBAAiB,CAAE;IAClC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC;;QAEjE;QACA,IAAI,CAACT,QAAO,GAAIQ,QAAQ,CAACT,IAAI,CAACW,GAAG,CAAEC,GAAG,KAAM;UAC1C,GAAGA,GAAG;UACNC,OAAO,EAAED,GAAG,CAACC,OAAM,IAAK;YAAEC,EAAE,EAAE;UAAM,CAAC;UACrCC,aAAa,EAAE,IAAIC,IAAI,CAACJ,GAAG,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;YAC7DC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC,CAAC,CAAE;QACN,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDE,gBAAgBA,CAACC,UAAU,EAAE;MAC3B,IAAI,CAAC1B,QAAQ,CAAC2B,IAAI,CAAC;QACjB,GAAGD,UAAU;QACbZ,aAAa,EAAE,IAAIC,IAAI,CAACW,UAAU,CAACV,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;UACpEC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAAClB,UAAS,GAAI,KAAK;IACzB;EACF,CAAC;EACDwB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}