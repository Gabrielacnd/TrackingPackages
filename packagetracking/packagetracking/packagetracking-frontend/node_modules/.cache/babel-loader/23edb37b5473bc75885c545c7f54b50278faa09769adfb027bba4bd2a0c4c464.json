{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"PackagesView\",\n  data() {\n    return {\n      packages: [],\n      // Lista pachetelor\n      headers: [{\n        text: \"Package ID\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      }, {\n        text: \"Courier Details\",\n        value: \"courier\"\n      }, {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      } // Nouă coloană pentru acțiuni\n      ]\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        // Endpoint-ul GET către server pentru datele pachetelor\n        const response = await axios.get(\"http://localhost:8083/package\");\n\n        // Procesare datele returnate din server\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"\",\n            name: \"\",\n            email: \"\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    async deliverPackage(packageId) {\n      try {\n        // Endpoint-ul POST pentru livrarea pachetului\n        await axios.post(\"http://localhost:8083/package/deliver\", {\n          packageId\n        });\n\n        // Notificare succes\n        alert(`Package ${packageId} marked as delivered!`);\n\n        // Reîncărcăm lista de pachete\n        this.fetchPackages();\n      } catch (error) {\n        console.error(\"Error delivering package:\", error);\n        alert(\"Failed to deliver package. Please try again.\");\n      }\n    },\n    getStatusColor(status) {\n      // Returnăm culoarea pentru fiecare status\n      switch (status) {\n        case \"NEW\":\n          return \"blue\";\n        case \"PENDING\":\n          return \"orange\";\n        case \"DELIVERED\":\n          return \"green\";\n        default:\n          return \"grey\";\n      }\n    }\n  },\n  mounted() {\n    // Preluarea datelor despre pachete la încărcarea componentei\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","name","data","packages","headers","text","value","sortable","methods","fetchPackages","response","get","map","pkg","courier","id","email","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","deliverPackage","packageId","post","alert","getStatusColor","status","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Packages</h1>\r\n    <v-btn color=\"primary\" @click=\"fetchPackages\">REFRESH</v-btn>\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"packages\"\r\n        class=\"mt-3\"\r\n        item-value=\"id\"\r\n        dense\r\n    >\r\n      <template v-slot:item.formattedDate=\"{ item }\">\r\n        {{ item.formattedDate }}\r\n      </template>\r\n      <template v-slot:item.courier=\"{ item }\">\r\n        <div>\r\n          <strong>ID:</strong> {{ item.courier.id || \"\" }}<br />\r\n          <strong>Name:</strong> {{ item.courier.name || \"\" }}<br />\r\n          <strong>Email:</strong> {{ item.courier.email || \"\" }}\r\n        </div>\r\n      </template>\r\n      <template v-slot:item.deliveryAddress=\"{ item }\">\r\n        {{ item.deliveryAddress || \"\" }}\r\n      </template>\r\n      <template v-slot:item.status=\"{ item }\">\r\n        <v-chip :color=\"getStatusColor(item.status)\" dark>{{ item.status }}</v-chip>\r\n      </template>\r\n      <template v-slot:item.actions=\"{ item }\">\r\n        <v-btn\r\n            v-if=\"item.status !== 'DELIVERED'\"\r\n            color=\"success\"\r\n            @click=\"deliverPackage(item.id)\"\r\n        >\r\n          Deliver\r\n        </v-btn>\r\n      </template>\r\n    </v-data-table>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PackagesView\",\r\n  data() {\r\n    return {\r\n      packages: [], // Lista pachetelor\r\n      headers: [\r\n        { text: \"Package ID\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" },\r\n        { text: \"Courier Details\", value: \"courier\" },\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Actions\", value: \"actions\", sortable: false }, // Nouă coloană pentru acțiuni\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        // Endpoint-ul GET către server pentru datele pachetelor\r\n        const response = await axios.get(\"http://localhost:8083/package\");\r\n\r\n        // Procesare datele returnate din server\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"\", name: \"\", email: \"\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    async deliverPackage(packageId) {\r\n      try {\r\n        // Endpoint-ul POST pentru livrarea pachetului\r\n        await axios.post(\"http://localhost:8083/package/deliver\", { packageId });\r\n\r\n        // Notificare succes\r\n        alert(`Package ${packageId} marked as delivered!`);\r\n\r\n        // Reîncărcăm lista de pachete\r\n        this.fetchPackages();\r\n      } catch (error) {\r\n        console.error(\"Error delivering package:\", error);\r\n        alert(\"Failed to deliver package. Please try again.\");\r\n      }\r\n    },\r\n    getStatusColor(status) {\r\n      // Returnăm culoarea pentru fiecare status\r\n      switch (status) {\r\n        case \"NEW\":\r\n          return \"blue\";\r\n        case \"PENDING\":\r\n          return \"orange\";\r\n        case \"DELIVERED\":\r\n          return \"green\";\r\n        default:\r\n          return \"grey\";\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Preluarea datelor despre pachete la încărcarea componentei\r\n    this.fetchPackages();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Adaugă aici stiluri personalizate, dacă este necesar */\r\n</style>\r\n"],"mappings":";AAyCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAK,CAAC,EACnC;QAAED,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAgB,CAAC,EAC9C;QAAED,IAAI,EAAE,iBAAiB;QAAEC,KAAK,EAAE;MAAU,CAAC,EAC7C;QAAED,IAAI,EAAE,kBAAkB;QAAEC,KAAK,EAAE;MAAkB,CAAC,EACtD;QAAED,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnC;QAAED,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAE;MAAA;IAE5D,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,+BAA+B,CAAC;;QAEjE;QACA,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACR,IAAI,CAACU,GAAG,CAAEC,GAAG,KAAM;UAC1C,GAAGA,GAAG;UACNC,OAAO,EAAED,GAAG,CAACC,OAAM,IAAK;YAAEC,EAAE,EAAE,EAAE;YAAEd,IAAI,EAAE,EAAE;YAAEe,KAAK,EAAE;UAAG,CAAC;UACvDC,aAAa,EAAE,IAAIC,IAAI,CAACL,GAAG,CAACM,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;YAC7DC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC;QACH,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAME,cAAcA,CAACC,SAAS,EAAE;MAC9B,IAAI;QACF;QACA,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,uCAAuC,EAAE;UAAED;QAAU,CAAC,CAAC;;QAExE;QACAE,KAAK,CAAC,WAAWF,SAAS,uBAAuB,CAAC;;QAElD;QACA,IAAI,CAACpB,aAAa,CAAC,CAAC;MACtB,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDK,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC;IACDC,cAAcA,CAACC,MAAM,EAAE;MACrB;MACA,QAAQA,MAAM;QACZ,KAAK,KAAK;UACR,OAAO,MAAM;QACf,KAAK,SAAS;UACZ,OAAO,QAAQ;QACjB,KAAK,WAAW;UACd,OAAO,OAAO;QAChB;UACE,OAAO,MAAM;MACjB;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACzB,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}