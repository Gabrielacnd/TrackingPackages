{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\n// Import axios only if used in the component.\nimport axios from \"axios\";\nexport default {\n  name: \"PackagesView\",\n  data() {\n    return {\n      packages: [],\n      couriers: [],\n      managers: [],\n      assignDialog: false,\n      managersDialog: false,\n      selectedPackage: null,\n      selectedCourierId: null,\n      loadingCouriers: false,\n      headers: [{\n        text: \"Package ID\",\n        value: \"id\"\n      }, {\n        text: \"Created On\",\n        value: \"formattedDate\"\n      }, {\n        text: \"Courier Details\",\n        value: \"courier\"\n      }, {\n        text: \"Delivery Address\",\n        value: \"deliveryAddress\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\"\n      }],\n      managerHeaders: [{\n        text: \"Manager Name\",\n        value: \"name\"\n      }, {\n        text: \"Delivered Count\",\n        value: \"deliveredCount\"\n      }]\n    };\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/package\");\n        this.packages = response.data.map(pkg => ({\n          ...pkg,\n          courier: pkg.courier || {\n            id: \"\",\n            name: \"\",\n            email: \"\"\n          },\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }));\n      } catch (error) {\n        console.error(\"Error fetching packages:\", error);\n      }\n    },\n    async fetchManagers() {\n      try {\n        const response = await axios.get(\"http://localhost:8083/managers/delivered-packages-count\");\n        this.managers = response.data.map(item => ({\n          name: item[0],\n          deliveredCount: item[1]\n        }));\n      } catch (error) {\n        console.error(\"Error fetching managers:\", error);\n      }\n    },\n    openManagersDialog() {\n      this.managersDialog = true;\n      this.fetchManagers();\n    },\n    async fetchCouriers() {\n      try {\n        this.loadingCouriers = true;\n        const response = await axios.get(\"http://localhost:8083/couriers/no-pending-packages\");\n        this.couriers = response.data || [];\n      } catch (error) {\n        console.error(\"Error fetching couriers:\", error);\n      } finally {\n        this.loadingCouriers = false;\n      }\n    },\n    openAssignDialog(packageItem) {\n      this.selectedPackage = packageItem;\n      this.selectedCourierId = null;\n      this.assignDialog = true;\n      this.fetchCouriers();\n    },\n    async assignPackage() {\n      try {\n        if (!this.selectedCourierId) {\n          alert(\"Please select a courier.\");\n          return;\n        }\n        await axios.put(`http://localhost:8083/packages/${this.selectedPackage.id}/assign`, {\n          courier_id: this.selectedCourierId\n        });\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\n        this.assignDialog = false;\n        this.fetchPackages();\n      } catch (error) {\n        console.error(\"Error assigning package:\", error);\n        alert(\"Failed to assign package. Please try again.\");\n      }\n    },\n    async deliverPackage(packageItem) {\n      try {\n        await axios.post(\"http://localhost:8083/package/deliver\", {\n          packageId: packageItem.id\n        });\n        alert(`Package ${packageItem.id} delivered successfully`);\n        this.fetchPackages();\n      } catch (error) {\n        console.error(\"Error delivering package:\", error);\n        alert(\"Failed to deliver the package.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","name","data","packages","couriers","managers","assignDialog","managersDialog","selectedPackage","selectedCourierId","loadingCouriers","headers","text","value","managerHeaders","methods","fetchPackages","response","get","map","pkg","courier","id","email","formattedDate","Date","createdOn","toLocaleString","year","month","day","hour","minute","error","console","fetchManagers","item","deliveredCount","openManagersDialog","fetchCouriers","openAssignDialog","packageItem","assignPackage","alert","put","courier_id","deliverPackage","post","packageId","mounted"],"sources":["D:\\proiectSCD\\packagetracking\\packagetracking\\packagetracking-frontend\\src\\components\\PackagesView.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Packages</h1>\r\n    <v-btn color=\"primary\" @click=\"fetchPackages\">REFRESH</v-btn>\r\n    <v-btn color=\"secondary\" @click=\"openManagersDialog\">Show Managers</v-btn>\r\n\r\n    <!-- Dialog pentru a afiÈ™a managerii -->\r\n    <v-dialog v-model=\"managersDialog\" max-width=\"600px\">\r\n      <v-card>\r\n        <v-card-title>Managers</v-card-title>\r\n        <v-card-text>\r\n          <v-data-table\r\n              :headers=\"managerHeaders\"\r\n              :items=\"managers\"\r\n              class=\"mt-3\"\r\n              item-value=\"id\"\r\n              dense\r\n          >\r\n            <template>\r\n              {{ item.name }}\r\n            </template>\r\n            <template>\r\n              {{ item.deliveredCount }}\r\n            </template>\r\n          </v-data-table>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"primary\" @click=\"managersDialog = false\">Close</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"packages\"\r\n        class=\"mt-3\"\r\n        item-value=\"id\"\r\n        dense\r\n    >\r\n      <template>\r\n        {{ item.formattedDate }}\r\n      </template>\r\n      <template >\r\n        <div>\r\n          <strong>ID:</strong> {{ item.courier.id }}<br />\r\n          <strong>Name:</strong> {{ item.courier.name }}<br />\r\n          <strong>Email:</strong> {{ item.courier.email }}\r\n        </div>\r\n      </template>\r\n      <template >\r\n        {{ item.deliveryAddress }}\r\n      </template>\r\n      <template #item.actions=\"{ item }\">\r\n        <v-btn\r\n            color=\"success\"\r\n            small\r\n            @click=\"deliverPackage(item)\"\r\n            :disabled=\"item.status === 'DELIVERED'\"\r\n        >\r\n          Deliver\r\n        </v-btn>\r\n        <v-btn\r\n            color=\"primary\"\r\n            small\r\n            @click=\"openAssignDialog(item)\"\r\n            :disabled=\"item.status !== 'NEW'\"\r\n        >\r\n          Assign\r\n        </v-btn>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <!-- Dialog pentru asignarea pachetului -->\r\n    <v-dialog v-model=\"assignDialog\" max-width=\"500px\">\r\n      <v-card>\r\n        <v-card-title>Assign Package</v-card-title>\r\n        <v-card-text>\r\n          <v-form @submit.prevent=\"assignPackage\">\r\n            <v-select\r\n                v-model=\"selectedCourierId\"\r\n                :items=\"couriers\"\r\n                item-text=\"name\"\r\n                item-value=\"id\"\r\n                label=\"Select Courier\"\r\n                :disabled=\"loadingCouriers\"\r\n                required\r\n            >\r\n              <template #append>\r\n                <span v-if=\"couriers.length === 0 && !loadingCouriers\">No couriers available</span>\r\n                <span v-if=\"loadingCouriers\">Loading couriers...</span>\r\n              </template>\r\n            </v-select>\r\n            <v-btn color=\"primary\" type=\"submit\" :disabled=\"!selectedCourierId\">Assign</v-btn>\r\n          </v-form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n// Import axios only if used in the component.\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PackagesView\",\r\n  data() {\r\n    return {\r\n      packages: [],\r\n      couriers: [],\r\n      managers: [],\r\n      assignDialog: false,\r\n      managersDialog: false,\r\n      selectedPackage: null,\r\n      selectedCourierId: null,\r\n      loadingCouriers: false,\r\n      headers: [\r\n        { text: \"Package ID\", value: \"id\" },\r\n        { text: \"Created On\", value: \"formattedDate\" },\r\n        { text: \"Courier Details\", value: \"courier\" },\r\n        { text: \"Delivery Address\", value: \"deliveryAddress\" },\r\n        { text: \"Status\", value: \"status\" },\r\n        { text: \"Actions\", value: \"actions\" },\r\n      ],\r\n      managerHeaders: [\r\n        { text: \"Manager Name\", value: \"name\" },\r\n        { text: \"Delivered Count\", value: \"deliveredCount\" }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPackages() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/package\");\r\n        this.packages = response.data.map((pkg) => ({\r\n          ...pkg,\r\n          courier: pkg.courier || { id: \"\", name: \"\", email: \"\" },\r\n          formattedDate: new Date(pkg.createdOn).toLocaleString(\"ro-RO\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching packages:\", error);\r\n      }\r\n    },\r\n    async fetchManagers() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8083/managers/delivered-packages-count\");\r\n        this.managers = response.data.map(item => ({\r\n          name: item[0],\r\n          deliveredCount: item[1]\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching managers:\", error);\r\n      }\r\n    },\r\n    openManagersDialog() {\r\n      this.managersDialog = true;\r\n      this.fetchManagers();\r\n    },\r\n    async fetchCouriers() {\r\n      try {\r\n        this.loadingCouriers = true;\r\n        const response = await axios.get(\"http://localhost:8083/couriers/no-pending-packages\");\r\n        this.couriers = response.data || [];\r\n      } catch (error) {\r\n        console.error(\"Error fetching couriers:\", error);\r\n      } finally {\r\n        this.loadingCouriers = false;\r\n      }\r\n    },\r\n    openAssignDialog(packageItem) {\r\n      this.selectedPackage = packageItem;\r\n      this.selectedCourierId = null;\r\n      this.assignDialog = true;\r\n      this.fetchCouriers();\r\n    },\r\n    async assignPackage() {\r\n      try {\r\n        if (!this.selectedCourierId) {\r\n          alert(\"Please select a courier.\");\r\n          return;\r\n        }\r\n\r\n        await axios.put(\r\n            `http://localhost:8083/packages/${this.selectedPackage.id}/assign`,\r\n            { courier_id: this.selectedCourierId }\r\n        );\r\n\r\n        alert(`Package ${this.selectedPackage.id} assigned successfully`);\r\n\r\n        this.assignDialog = false;\r\n\r\n        this.fetchPackages();\r\n\r\n      } catch (error) {\r\n\r\n        console.error(\"Error assigning package:\", error);\r\n\r\n        alert(\"Failed to assign package. Please try again.\");\r\n\r\n      }\r\n    },\r\n    async deliverPackage(packageItem) {\r\n      try {\r\n        await axios.post(\"http://localhost:8083/package/deliver\", {\r\n          packageId: packageItem.id,\r\n        });\r\n        alert(`Package ${packageItem.id} delivered successfully`);\r\n        this.fetchPackages();\r\n      } catch (error) {\r\n        console.error(\"Error delivering package:\", error);\r\n        alert(\"Failed to deliver the package.\");\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPackages();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Stiluri personalizate pentru componentÄƒ */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}